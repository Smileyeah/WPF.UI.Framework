<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/TS.UI;component/Themes/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/TS.UI;component/Assets/ToggleButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/TS.UI;component/Assets/ScrollViewer.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Style.TreeViewItem.Normal" TargetType="{x:Type TreeViewItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="PART_Expander" Grid.Row="0" Grid.Column="0" ClickMode="Press"
                                      Style="{DynamicResource Style.ToggleButton.TreeView}"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      />
                        <Grid x:Name="PART_Header" Grid.Row="0" Grid.Column="1">
                            <ContentPresenter Grid.Column="1" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                        <ItemsPresenter x:Name="PART_Presenter" Grid.Row="1" Grid.Column="1" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="HasItems" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsExpanded" Value="True" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="HasItems" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Presenter" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger SourceName="PART_Header" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource ColorBrush.TreeViewItem.Hover}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource ColorBrush.TreeViewItem.Selected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style.TreeView.Normal" TargetType="{x:Type TreeView}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            >
                        <ScrollViewer Focusable="False" Style="{DynamicResource Style.ScrollViewer.Microscler}"
                                      VirtualizingStackPanel.IsVirtualizing="{TemplateBinding VirtualizingStackPanel.IsVirtualizing}"
                                      VirtualizingPanel.IsVirtualizingWhenGrouping="{TemplateBinding VirtualizingPanel.IsVirtualizingWhenGrouping}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      >
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
